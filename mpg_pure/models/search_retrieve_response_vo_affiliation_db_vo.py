# coding: utf-8

"""
    PubMan REST API

    This is an automatically generated REST API client for PubMan.  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class SearchRetrieveResponseVOAffiliationDbVO(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'number_of_records': 'int',
        'records': 'list[SearchRetrieveRecordVOAffiliationDbVO]',
        'scroll_id': 'str',
        'version': 'str'
    }

    attribute_map = {
        'number_of_records': 'numberOfRecords',
        'records': 'records',
        'scroll_id': 'scrollId',
        'version': 'version'
    }

    def __init__(self, number_of_records=None, records=None, scroll_id=None, version=None):  # noqa: E501
        """SearchRetrieveResponseVOAffiliationDbVO - a model defined in Swagger"""  # noqa: E501

        self._number_of_records = None
        self._records = None
        self._scroll_id = None
        self._version = None
        self.discriminator = None

        if number_of_records is not None:
            self.number_of_records = number_of_records
        if records is not None:
            self.records = records
        if scroll_id is not None:
            self.scroll_id = scroll_id
        if version is not None:
            self.version = version

    @property
    def number_of_records(self):
        """Gets the number_of_records of this SearchRetrieveResponseVOAffiliationDbVO.  # noqa: E501


        :return: The number_of_records of this SearchRetrieveResponseVOAffiliationDbVO.  # noqa: E501
        :rtype: int
        """
        return self._number_of_records

    @number_of_records.setter
    def number_of_records(self, number_of_records):
        """Sets the number_of_records of this SearchRetrieveResponseVOAffiliationDbVO.


        :param number_of_records: The number_of_records of this SearchRetrieveResponseVOAffiliationDbVO.  # noqa: E501
        :type: int
        """

        self._number_of_records = number_of_records

    @property
    def records(self):
        """Gets the records of this SearchRetrieveResponseVOAffiliationDbVO.  # noqa: E501


        :return: The records of this SearchRetrieveResponseVOAffiliationDbVO.  # noqa: E501
        :rtype: list[SearchRetrieveRecordVOAffiliationDbVO]
        """
        return self._records

    @records.setter
    def records(self, records):
        """Sets the records of this SearchRetrieveResponseVOAffiliationDbVO.


        :param records: The records of this SearchRetrieveResponseVOAffiliationDbVO.  # noqa: E501
        :type: list[SearchRetrieveRecordVOAffiliationDbVO]
        """

        self._records = records

    @property
    def scroll_id(self):
        """Gets the scroll_id of this SearchRetrieveResponseVOAffiliationDbVO.  # noqa: E501


        :return: The scroll_id of this SearchRetrieveResponseVOAffiliationDbVO.  # noqa: E501
        :rtype: str
        """
        return self._scroll_id

    @scroll_id.setter
    def scroll_id(self, scroll_id):
        """Sets the scroll_id of this SearchRetrieveResponseVOAffiliationDbVO.


        :param scroll_id: The scroll_id of this SearchRetrieveResponseVOAffiliationDbVO.  # noqa: E501
        :type: str
        """

        self._scroll_id = scroll_id

    @property
    def version(self):
        """Gets the version of this SearchRetrieveResponseVOAffiliationDbVO.  # noqa: E501


        :return: The version of this SearchRetrieveResponseVOAffiliationDbVO.  # noqa: E501
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this SearchRetrieveResponseVOAffiliationDbVO.


        :param version: The version of this SearchRetrieveResponseVOAffiliationDbVO.  # noqa: E501
        :type: str
        """

        self._version = version

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SearchRetrieveResponseVOAffiliationDbVO, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SearchRetrieveResponseVOAffiliationDbVO):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
